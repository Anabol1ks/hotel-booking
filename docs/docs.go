// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение списка пользователей через панель администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Получение списка пользователей",
                "responses": {
                    "200": {
                        "description": "Список пользователей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.UserResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Только администратор может просматривать пользователей",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении пользователей",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/role": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обновление роли пользователя через панель администратора",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Обновление роли пользователя",
                "parameters": [
                    {
                        "description": "Данные для обновления роли пользователя. Возможные значения: owner, admin, client",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UpdateRoleInput"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Роль успешно обновлена",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Описание ошибки валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Только администратор может изменять роли",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось обновить роль",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Вход пользователя с указанием почты и пароля",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Вход пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Получение токена",
                        "schema": {
                            "$ref": "#/definitions/response.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Описание ошибки валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Неверный email или пароль",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Регистрирует нового пользователя с указанием имени, почты, пароля и телефона",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Регистрация пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Регистрация успешна",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Описание ошибки валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Почта или телефон уже зарегистрированы",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Не удалось хешировать пароль или создать пользователя",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Обрабатывает запрос на сброс пароля пользователя с использованием токена",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Сброс пароля",
                "parameters": [
                    {
                        "description": "Данные для сброса пароля",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResetPasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Сообщение об успешном сбросе пароля",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или истекший токен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Неверный токен",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/auth/reset-password-request": {
            "post": {
                "description": "Отправляет письмо со ссылкой для сброса пароля на указанный email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Запрос на сброс пароля",
                "parameters": [
                    {
                        "description": "Email пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ResetPasswordRequestInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Письмо с инструкцией отправлено",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Бронирование номера только для авторизованных пользователей",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Бронирование номера",
                "parameters": [
                    {
                        "description": "Данные для бронирования",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/bookings.CreateBookingInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Данные о бранировании",
                        "schema": {
                            "$ref": "#/definitions/response.BookingResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Номер не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Номер уже забронирован в этот период",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при проверке доступности номера или при создании бронирования",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Отмена бронирования пользователем",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Отмена бронирования",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID бронирования",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Бронирование успешно отменено",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Бронирование уже оплачено и не может быть отменено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Вы не можете отменить бронирование, которое не принадлежит вам",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Бронирование не найдено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при отмене бронирования",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{id}/pay": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает платеж через YooKassa для указанного бронирования и возвращает ссылку для оплаты.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Создание платежа для бронирования",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Идентификатор бронирования",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ссылка для оплаты успешно создана",
                        "schema": {
                            "$ref": "#/definitions/response.CreatePaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректный запрос или бронирование уже оплачено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Бронирование не найдено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера или ошибка платежной системы",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/bookings/{id}/refund": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Обрабатывает запрос на возврат платежа за бронирование. Проверяет права доступа пользователя, статус оплаты и выполняет возврат через API YooKassa.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Обработка возврата платежа",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID бронирования",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Оплата отменена",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Бронирование не оплачено или ID платежа отсутствует",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "У вас нет прав на отмену этого бронирования",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Бронирование не найдено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/email/test": {
            "get": {
                "description": "Отправляет тестовое письмо на указанную почту.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "Отправка тестового письма",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email получателя",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Тестовое письмо успешно отправлено",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Не указан email получателя",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка отправки письма",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список избранных номеров пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Получение списка избранных номеров",
                "responses": {
                    "200": {
                        "description": "Список избранных номеров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.RoomResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка избранного",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/favorites/{room_id}": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавляет номер в список избранных пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Добавление номера в избранное",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID номера",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Номер успешно добавлен в избранное",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Номер уже в избранном",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Номер не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет номер из списка избранных пользователя",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "favorites"
                ],
                "summary": "Удаление номера из избранного",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID номера",
                        "name": "room_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Номер успешно удален из избранного",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "404": {
                        "description": "Номер не найден в избранном",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/hotels": {
            "get": {
                "description": "Возвращает список всех отелей, включая связанные номера.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Получение списка отелей",
                "responses": {
                    "200": {
                        "description": "Список отелей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.HotelResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении отелей",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owners/bookings": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Получение бронирований для владельца",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "bookings"
                ],
                "summary": "Получение бронирований владельца",
                "responses": {
                    "201": {
                        "description": "Данные о бранировании",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.BookingResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении бронирований",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owners/hotels": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Возвращает список отелей, принадлежащих текущему владельцу",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Получение списка отелей владельца",
                "responses": {
                    "200": {
                        "description": "Список отелей",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.HotelResponse"
                            }
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении отелей",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Обрабатывает запрос на создание нового отеля. Только владельцы могут создавать новые отели.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "hotels"
                ],
                "summary": "Создание отеля владельцем",
                "parameters": [
                    {
                        "description": "Данные для создания нового отеля",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hotels.CreateHotelInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Новый отель успешно создан",
                        "schema": {
                            "$ref": "#/definitions/response.HotelResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации входных данных",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Только владельцы могут создавать отели",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при создании отеля",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owners/rooms": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает новый номер в отеле. Доступно только для владельцев.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Создание нового номера",
                "parameters": [
                    {
                        "description": "Данные номера",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hotels.CreateRoomInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Созданный номер",
                        "schema": {
                            "$ref": "#/definitions/response.RoomResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Отель не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/owners/{id}/room": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Изменяет существующий номер. Доступно только для владельцев.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Изменение номера",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID номера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные номера",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/hotels.CreateRoomInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Номер успешно обновлен",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен или номер не принадлежит владельцу",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Номер не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при обновлении номера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Удаляет существующий номер. Доступно только для владельцев.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Удаление номера",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID номера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Номер успешно удален",
                        "schema": {
                            "$ref": "#/definitions/response.MessageResponse"
                        }
                    },
                    "403": {
                        "description": "Доступ запрещен или номер не принадлежит владельцу",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Номер не найден",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка при удалении номера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/payments/callback": {
            "post": {
                "description": "Обрабатывает уведомления от платежной системы и обновляет статус оплаты для указанного бронирования.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payments"
                ],
                "summary": "Webhook для обработки статуса оплаты",
                "parameters": [
                    {
                        "description": "Данные вебхука от платежной системы",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/payments.PaymentCallbackRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Статус оплаты обновлен",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Некорректные данные запроса",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Бронирование не найдено",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "description": "Возвращает отфильтрованный список номеров с возможностью фильтрации по цене, вместимости, датам бронирования и отелю",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Получение списка номеров",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Минимальная цена",
                        "name": "min_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Максимальная цена",
                        "name": "max_price",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Минимальная вместимость",
                        "name": "capacity",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата начала (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Дата окончания (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ID отеля",
                        "name": "hotel_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Список номеров",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.RoomResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении номеров",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rooms/{id}/bookings": {
            "get": {
                "description": "Получение бронирований для номера",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rooms"
                ],
                "summary": "Получение бронирований для номера",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID номера",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Данные о бранировании",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/response.BookingResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при получении списка бронирований",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.RegisterInput": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password",
                "phone"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "auth.ResetPasswordInput": {
            "type": "object",
            "required": [
                "password",
                "token"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.ResetPasswordRequestInput": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "bookings.CreateBookingInput": {
            "type": "object",
            "required": [
                "end_date",
                "room_id",
                "start_date"
            ],
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                }
            }
        },
        "hotels.CreateHotelInput": {
            "type": "object",
            "required": [
                "address",
                "name"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "hotels.CreateRoomInput": {
            "type": "object",
            "required": [
                "capacity",
                "hotel_id",
                "price",
                "room_type"
            ],
            "properties": {
                "amenities": {
                    "type": "string"
                },
                "capacity": {
                    "type": "integer"
                },
                "hotel_id": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "room_type": {
                    "type": "string"
                }
            }
        },
        "payments.PaymentCallbackRequest": {
            "type": "object",
            "properties": {
                "object": {
                    "description": "Основной объект данных",
                    "allOf": [
                        {
                            "$ref": "#/definitions/payments.PaymentObject"
                        }
                    ]
                }
            }
        },
        "payments.PaymentMetadata": {
            "type": "object",
            "properties": {
                "booking_id": {
                    "description": "Уникальный идентификатор бронирования",
                    "type": "string",
                    "example": "1"
                }
            }
        },
        "payments.PaymentObject": {
            "type": "object",
            "properties": {
                "metadata": {
                    "description": "Метаданные оплаты",
                    "allOf": [
                        {
                            "$ref": "#/definitions/payments.PaymentMetadata"
                        }
                    ]
                },
                "status": {
                    "description": "Статус оплаты",
                    "type": "string",
                    "example": "succeeded"
                }
            }
        },
        "response.BookingResponse": {
            "type": "object",
            "properties": {
                "end_date": {
                    "type": "string"
                },
                "payment_status": {
                    "description": "Статус оплаты",
                    "type": "string"
                },
                "room_id": {
                    "type": "integer"
                },
                "start_date": {
                    "type": "string"
                },
                "total_cost": {
                    "description": "Итоговая стоимость",
                    "type": "number"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "response.CreatePaymentResponse": {
            "type": "object",
            "properties": {
                "payment_url": {
                    "description": "Ссылка для оплаты",
                    "type": "string",
                    "example": "ссылка на оплату"
                }
            }
        },
        "response.ErrorResponse": {
            "description": "Стандартный ответ при ошибке",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "response.HotelResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "integer"
                },
                "rooms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.RoomResponse"
                    }
                }
            }
        },
        "response.MessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.RoomResponse": {
            "type": "object",
            "properties": {
                "amenities": {
                    "description": "Удобства",
                    "type": "string"
                },
                "available": {
                    "description": "Наличие",
                    "type": "boolean"
                },
                "capacity": {
                    "description": "Количество гостей",
                    "type": "integer"
                },
                "hotel_id": {
                    "description": "ID отеля",
                    "type": "integer"
                },
                "price": {
                    "description": "Цена за ночь",
                    "type": "number"
                },
                "room_type": {
                    "description": "Тип номера (стандартный, люкс и т.д.)",
                    "type": "string"
                }
            }
        },
        "response.SuccessResponse": {
            "description": "Стандартный ответ при успешном выполнении",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.TokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "Ваш токен"
                }
            }
        },
        "response.UserResponse": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Name": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Role": {
                    "type": "string"
                }
            }
        },
        "users.UpdateRoleInput": {
            "type": "object",
            "required": [
                "role"
            ],
            "properties": {
                "role": {
                    "type": "string",
                    "enum": [
                        "owner",
                        "admin",
                        "client"
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Система бронирования номеров",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
