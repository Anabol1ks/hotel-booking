definitions:
  auth.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone:
        type: string
    required:
    - email
    - name
    - password
    - phone
    type: object
  auth.ResetPasswordInput:
    properties:
      password:
        type: string
      token:
        type: string
    required:
    - password
    - token
    type: object
  auth.ResetPasswordRequestInput:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  bookings.CreateBookingInput:
    properties:
      end_date:
        type: string
      room_id:
        type: integer
      start_date:
        type: string
    required:
    - end_date
    - room_id
    - start_date
    type: object
  hotels.CreateHotelInput:
    properties:
      address:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - address
    - name
    type: object
  hotels.CreateRoomInput:
    properties:
      amenities:
        type: string
      capacity:
        type: integer
      hotel_id:
        type: integer
      price:
        type: number
      room_type:
        type: string
    required:
    - capacity
    - hotel_id
    - price
    - room_type
    type: object
  payments.PaymentCallbackRequest:
    properties:
      object:
        allOf:
        - $ref: '#/definitions/payments.PaymentObject'
        description: Основной объект данных
    type: object
  payments.PaymentMetadata:
    properties:
      booking_id:
        description: Уникальный идентификатор бронирования
        example: "1"
        type: string
    type: object
  payments.PaymentObject:
    properties:
      metadata:
        allOf:
        - $ref: '#/definitions/payments.PaymentMetadata'
        description: Метаданные оплаты
      status:
        description: Статус оплаты
        example: succeeded
        type: string
    type: object
  response.BookingResponse:
    properties:
      end_date:
        type: string
      payment_status:
        description: Статус оплаты
        type: string
      room_id:
        type: integer
      start_date:
        type: string
      total_cost:
        description: Итоговая стоимость
        type: number
      user_id:
        type: integer
    type: object
  response.CreatePaymentResponse:
    properties:
      payment_url:
        description: Ссылка для оплаты
        example: ссылка на оплату
        type: string
    type: object
  response.ErrorResponse:
    description: Стандартный ответ при ошибке
    properties:
      error:
        type: string
    type: object
  response.HotelResponse:
    properties:
      address:
        type: string
      description:
        type: string
      name:
        type: string
      owner_id:
        type: integer
      rooms:
        items:
          $ref: '#/definitions/response.RoomResponse'
        type: array
    type: object
  response.MessageResponse:
    properties:
      message:
        type: string
    type: object
  response.RoomResponse:
    properties:
      amenities:
        description: Удобства
        type: string
      available:
        description: Наличие
        type: boolean
      capacity:
        description: Количество гостей
        type: integer
      hotel_id:
        description: ID отеля
        type: integer
      price:
        description: Цена за ночь
        type: number
      room_type:
        description: Тип номера (стандартный, люкс и т.д.)
        type: string
    type: object
  response.SuccessResponse:
    description: Стандартный ответ при успешном выполнении
    properties:
      message:
        type: string
    type: object
  response.TokenResponse:
    properties:
      token:
        example: Ваш токен
        type: string
    type: object
  response.UserResponse:
    properties:
      Email:
        type: string
      ID:
        type: integer
      Name:
        type: string
      Phone:
        type: string
      Role:
        type: string
    type: object
  users.UpdateRoleInput:
    properties:
      role:
        enum:
        - owner
        - admin
        - client
        type: string
    required:
    - role
    type: object
info:
  contact: {}
  title: Система бронирования номеров
paths:
  /admin/users:
    get:
      consumes:
      - application/json
      description: Получение списка пользователей через панель администратора
      produces:
      - application/json
      responses:
        "200":
          description: Список пользователей
          schema:
            items:
              $ref: '#/definitions/response.UserResponse'
            type: array
        "403":
          description: Только администратор может просматривать пользователей
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при получении пользователей
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение списка пользователей
      tags:
      - admin
  /admin/users/{id}/role:
    put:
      consumes:
      - application/json
      description: Обновление роли пользователя через панель администратора
      parameters:
      - description: 'Данные для обновления роли пользователя. Возможные значения:
          owner, admin, client'
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/users.UpdateRoleInput'
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Роль успешно обновлена
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Описание ошибки валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Только администратор может изменять роли
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Не удалось обновить роль
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Обновление роли пользователя
      tags:
      - admin
  /auth/login:
    post:
      consumes:
      - application/json
      description: Вход пользователя с указанием почты и пароля
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: Получение токена
          schema:
            $ref: '#/definitions/response.TokenResponse'
        "400":
          description: Описание ошибки валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "401":
          description: Неверный email или пароль
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Вход пользователя
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя с указанием имени, почты, пароля
        и телефона
      parameters:
      - description: Данные для регистрации
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Регистрация успешна
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Описание ошибки валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Почта или телефон уже зарегистрированы
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Не удалось хешировать пароль или создать пользователя
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Обрабатывает запрос на сброс пароля пользователя с использованием
        токена
      parameters:
      - description: Данные для сброса пароля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: Сообщение об успешном сбросе пароля
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Ошибка валидации или истекший токен
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Неверный токен
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Внутренняя ошибка сервера
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Сброс пароля
      tags:
      - auth
  /auth/reset-password-request:
    post:
      consumes:
      - application/json
      description: Отправляет письмо со ссылкой для сброса пароля на указанный email
      parameters:
      - description: Email пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/auth.ResetPasswordRequestInput'
      produces:
      - application/json
      responses:
        "200":
          description: Письмо с инструкцией отправлено
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Пользователь не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Запрос на сброс пароля
      tags:
      - auth
  /bookings:
    post:
      description: Бронирование номера только для авторизованных пользователей
      parameters:
      - description: Данные для бронирования
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/bookings.CreateBookingInput'
      produces:
      - application/json
      responses:
        "201":
          description: Данные о бранировании
          schema:
            $ref: '#/definitions/response.BookingResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Номер не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "409":
          description: Номер уже забронирован в этот период
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при проверке доступности номера или при создании бронирования
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Бронирование номера
      tags:
      - bookings
  /bookings/{id}:
    delete:
      description: Отмена бронирования пользователем
      parameters:
      - description: ID бронирования
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Бронирование успешно отменено
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Бронирование уже оплачено и не может быть отменено
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Вы не можете отменить бронирование, которое не принадлежит
            вам
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Бронирование не найдено
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при отмене бронирования
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Отмена бронирования
      tags:
      - bookings
  /bookings/{id}/pay:
    post:
      consumes:
      - application/json
      description: Создает платеж через YooKassa для указанного бронирования и возвращает
        ссылку для оплаты.
      parameters:
      - description: Идентификатор бронирования
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Ссылка для оплаты успешно создана
          schema:
            $ref: '#/definitions/response.CreatePaymentResponse'
        "400":
          description: Некорректный запрос или бронирование уже оплачено
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Бронирование не найдено
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера или ошибка платежной системы
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создание платежа для бронирования
      tags:
      - payments
  /bookings/{id}/refund:
    post:
      consumes:
      - application/json
      description: Обрабатывает запрос на возврат платежа за бронирование. Проверяет
        права доступа пользователя, статус оплаты и выполняет возврат через API YooKassa.
      parameters:
      - description: ID бронирования
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Оплата отменена
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Бронирование не оплачено или ID платежа отсутствует
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: У вас нет прав на отмену этого бронирования
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Бронирование не найдено
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Обработка возврата платежа
      tags:
      - payments
  /email/test:
    get:
      consumes:
      - application/json
      description: Отправляет тестовое письмо на указанную почту.
      parameters:
      - description: Email получателя
        in: query
        name: to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Тестовое письмо успешно отправлено
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Не указан email получателя
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка отправки письма
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Отправка тестового письма
      tags:
      - email
  /favorites:
    get:
      description: Возвращает список избранных номеров пользователя
      produces:
      - application/json
      responses:
        "200":
          description: Список избранных номеров
          schema:
            items:
              $ref: '#/definitions/response.RoomResponse'
            type: array
        "500":
          description: Ошибка при получении списка избранного
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение списка избранных номеров
      tags:
      - favorites
  /favorites/{room_id}:
    delete:
      description: Удаляет номер из списка избранных пользователя
      parameters:
      - description: ID номера
        in: path
        name: room_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Номер успешно удален из избранного
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "404":
          description: Номер не найден в избранном
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удаление номера из избранного
      tags:
      - favorites
    post:
      consumes:
      - application/json
      description: Добавляет номер в список избранных пользователя
      parameters:
      - description: ID номера
        in: path
        name: room_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Номер успешно добавлен в избранное
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Номер уже в избранном
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Номер не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Добавление номера в избранное
      tags:
      - favorites
  /hotels:
    get:
      description: Возвращает список всех отелей, включая связанные номера.
      produces:
      - application/json
      responses:
        "200":
          description: Список отелей
          schema:
            items:
              $ref: '#/definitions/response.HotelResponse'
            type: array
        "500":
          description: Ошибка при получении отелей
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получение списка отелей
      tags:
      - hotels
  /owners/{id}/room:
    delete:
      consumes:
      - application/json
      description: Удаляет существующий номер. Доступно только для владельцев.
      parameters:
      - description: ID номера
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Номер успешно удален
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "403":
          description: Доступ запрещен или номер не принадлежит владельцу
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Номер не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при удалении номера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Удаление номера
      tags:
      - rooms
    put:
      consumes:
      - application/json
      description: Изменяет существующий номер. Доступно только для владельцев.
      parameters:
      - description: ID номера
        in: path
        name: id
        required: true
        type: integer
      - description: Данные номера
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/hotels.CreateRoomInput'
      produces:
      - application/json
      responses:
        "200":
          description: Номер успешно обновлен
          schema:
            $ref: '#/definitions/response.MessageResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Доступ запрещен или номер не принадлежит владельцу
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Номер не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при обновлении номера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Изменение номера
      tags:
      - rooms
  /owners/bookings:
    get:
      description: Получение бронирований для владельца
      produces:
      - application/json
      responses:
        "201":
          description: Данные о бранировании
          schema:
            items:
              $ref: '#/definitions/response.BookingResponse'
            type: array
        "403":
          description: Доступ запрещен
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при получении бронирований
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение бронирований владельца
      tags:
      - bookings
  /owners/hotels:
    get:
      description: Возвращает список отелей, принадлежащих текущему владельцу
      produces:
      - application/json
      responses:
        "200":
          description: Список отелей
          schema:
            items:
              $ref: '#/definitions/response.HotelResponse'
            type: array
        "403":
          description: Доступ запрещен
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при получении отелей
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Получение списка отелей владельца
      tags:
      - hotels
    post:
      consumes:
      - application/json
      description: Обрабатывает запрос на создание нового отеля. Только владельцы
        могут создавать новые отели.
      parameters:
      - description: Данные для создания нового отеля
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/hotels.CreateHotelInput'
      produces:
      - application/json
      responses:
        "201":
          description: Новый отель успешно создан
          schema:
            $ref: '#/definitions/response.HotelResponse'
        "400":
          description: Ошибка валидации входных данных
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Только владельцы могут создавать отели
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка при создании отеля
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создание отеля владельцем
      tags:
      - hotels
  /owners/rooms:
    post:
      consumes:
      - application/json
      description: Создает новый номер в отеле. Доступно только для владельцев.
      parameters:
      - description: Данные номера
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/hotels.CreateRoomInput'
      produces:
      - application/json
      responses:
        "201":
          description: Созданный номер
          schema:
            $ref: '#/definitions/response.RoomResponse'
        "400":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "403":
          description: Доступ запрещен
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Отель не найден
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Создание нового номера
      tags:
      - rooms
  /payments/callback:
    post:
      consumes:
      - application/json
      description: Обрабатывает уведомления от платежной системы и обновляет статус
        оплаты для указанного бронирования.
      parameters:
      - description: Данные вебхука от платежной системы
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/payments.PaymentCallbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Статус оплаты обновлен
          schema:
            $ref: '#/definitions/response.SuccessResponse'
        "400":
          description: Некорректные данные запроса
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Бронирование не найдено
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Webhook для обработки статуса оплаты
      tags:
      - payments
  /rooms:
    get:
      description: Возвращает отфильтрованный список номеров с возможностью фильтрации
        по цене, вместимости, датам бронирования и отелю
      parameters:
      - description: Минимальная цена
        in: query
        name: min_price
        type: string
      - description: Максимальная цена
        in: query
        name: max_price
        type: string
      - description: Минимальная вместимость
        in: query
        name: capacity
        type: string
      - description: Дата начала (YYYY-MM-DD)
        in: query
        name: start_date
        type: string
      - description: Дата окончания (YYYY-MM-DD)
        in: query
        name: end_date
        type: string
      - description: ID отеля
        in: query
        name: hotel_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Список номеров
          schema:
            items:
              $ref: '#/definitions/response.RoomResponse'
            type: array
        "500":
          description: Ошибка при получении номеров
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получение списка номеров
      tags:
      - rooms
  /rooms/{id}/bookings:
    get:
      description: Получение бронирований для номера
      parameters:
      - description: ID номера
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Данные о бранировании
          schema:
            items:
              $ref: '#/definitions/response.BookingResponse'
            type: array
        "500":
          description: Ошибка при получении списка бронирований
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Получение бронирований для номера
      tags:
      - rooms
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
